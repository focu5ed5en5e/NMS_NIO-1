#-*-coding:utf-8*-
#!/usr/bin/env python
''''''
name = 'Swaroop' # Это объект строки
if name.startswith('Swa'): 
    print(name.startswith('Swa'),'Да, строка начинается на "Swa"')
#Оператор in используется для проверки, 
# является ли некоторая строка частью данной строки.
if 'a' in name:
    print('Да, она содержит строку "a"')
if name.find('war') != -1: # find возвращает индекс с которой начинается искомая строка
    print(name.find('war'),' Да, она содержит строку "war"')
delimiter = '_*_'
mylist = ['Бразилия', 'Россия', 'Индия', 'Китай']
print(delimiter.join(mylist)) # delimiter автоматически вставляется между элементами и объединяется в новую строку.
'''
Здесь мы видим сразу несколько методов строк в действии. 
Метод startswith служит для того, чтобы определять, 
начинается ли строка с некоторой заданной подстроки. 

Метод find используется для определения позиции 
данной подстроки в строке; find возвращает -1, если
подстрока не обнаружена. В классе str также имеется
отличный метод для объединения (join) 3 элементов 
последовательности с указанной строкой в качестве 
разделителя между элементами, возвращающий большую
строку, сгенерированную таким образом.
'''
print(name[0])  # проверим неизменяемость строк
# нельзя изменить строку! TypeError: 'str' object does not support item assignment:
name[0] = 'J'
#######################################################################################################################
